// 5.2
V l = Array(‘A’..‘Z’) [+] Array(‘0’..‘9’)

L 6
   L 6
      -V rnd = random:(l.len)
      print(l.pop_fast(rnd), end' ‘ ’)
   print()
===
auto l = create_array(range_ee(u'A'_C, u'Z'_C)) + create_array(range_ee(u'0'_C, u'9'_C));

struct CodeBlock1
{
    CodeBlock1()
    {
        for (int Lindex = 0; Lindex < 6; Lindex++) {
            for (int Lindex = 0; Lindex < 6; Lindex++) {
                const auto rnd = randomns::_(l.len());
                print(l.pop_fast(rnd), u" "_S);
            }
            print();
        }
    }
} code_block_1;


// 6
-V
   g = [[‘  ██  ’, ‘██████’, ‘██████’],
        [‘████  ’, ‘    ██’, ‘    ██’],
        [‘  ██  ’, ‘██████’, ‘  ████’],
        [‘  ██  ’, ‘██    ’, ‘    ██’],
        [‘██████’, ‘██████’, ‘██████’]]
   digits = input()

// Vertically
L(digit) digits
   L(line) 5
      print(g[line][Int(digit)-1])
   print()

// Horizontally
L(line) 5
   L(digit) digits
      print(g[line][Int(digit)-1], end' ‘  ’)
   print()
===
const auto g = create_array({create_array({u"  ██  "_S, u"██████"_S, u"██████"_S}), create_array({u"████  "_S, u"    ██"_S, u"    ██"_S}), create_array({u"  ██  "_S, u"██████"_S, u"  ████"_S}), create_array({u"  ██  "_S, u"██    "_S, u"    ██"_S}), create_array({u"██████"_S, u"██████"_S, u"██████"_S})});
const auto digits = input();

struct CodeBlock1
{
    CodeBlock1()
    {
        for (auto &&digit : digits) {
            for (int line = 0; line < 5; line++)
                print(g[line][to_int(digit) - 1]);
            print();
        }

        for (int line = 0; line < 5; line++) {
            for (auto &&digit : digits)
                print(g[line][to_int(digit) - 1], u"  "_S);
            print();
        }
    }
} code_block_1;