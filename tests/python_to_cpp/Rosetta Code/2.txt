# https://www.rosettacode.org/wiki/21_game#Python:_Original.2C_with_output
import random

def select_count(game_count):
    '''selects a random number if the game_count is less than 18. otherwise chooses the winning number'''
    t : int
    if game_count<18:
        t = random.randint(1,3)
    else:
        t = 21-game_count
    print("The computer chooses {}".format(t))
    return t

def request_count():
    '''request user input between 1,2 and 3. It will continue till either quit(q) or one of those numbers is requested.'''
    t=""
    while True:
        try:
            t = input('Your choice 1 to 3 :')
            if int(t) in [1,2,3]:
                return int(t)
            else:
                print("Out of range, try again")
        except:
            if t=="q":
                return 0
            else:
                print("Invalid Entry, try again")

def start():
    game_count=0
    print("Enter q to quit at any time.\nThe computer will choose first.\nRunning total is now {}".format(game_count))
    roundno=1
    while True:
        print("\nROUND {}: \n".format(roundno))
        t = select_count(game_count)
        game_count = game_count+t
        print("Running total is now {}\n".format(game_count))
        if game_count>=21:
            print("So, commiserations, the computer has won!")
            return 0
        t = request_count()
        if t == 0:
            print('OK,quitting the game')
            return -1
        game_count = game_count+t
        print("Running total is now {}\n".format(game_count))
        if game_count>=21:
            print("So, congratulations, you've won!")
            return 1
        roundno+=1

c=0
m=0
while True:
    o = start()
    if o==-1:
        break
    else:
        c+=1 if o==0 else 0
        m+=1 if o==1 else 0
    print("Computer wins {0} game, human wins {1} games".format(c,m))
    t = input("Another game?(press y to continue):")
    if t != "y":
        break
===
F select_count(game_count)
   ‘selects a random number if the game_count is less than 18. otherwise chooses the winning number’
   Int t
   I game_count < 18
      t = random:(1 .. 3)
   E
      t = 21 - game_count
   print(‘The computer chooses #.’.format(t))
   R t

F request_count()
   ‘request user input between 1,2 and 3. It will continue till either quit(q) or one of those numbers is requested.’
   V t = ‘’
   L
      X.try
         t = input(‘Your choice 1 to 3 :’)
         I Int(t) C [1, 2, 3]
            R Int(t)
         E
            print(‘Out of range, try again’)
      X.catch
         I t == ‘q’
            R 0
         E
            print(‘Invalid Entry, try again’)

F start()
   V game_count = 0
   print("Enter q to quit at any time.\nThe computer will choose first.\nRunning total is now #.".format(game_count))
   V roundno = 1
   L
      print("\nROUND #.: \n".format(roundno))
      V t = select_count(game_count)
      game_count = game_count + t
      print("Running total is now #.\n".format(game_count))
      I game_count >= 21
         print(‘So, commiserations, the computer has won!’)
         R 0
      t = request_count()
      I t == 0
         print(‘OK,quitting the game’)
         R -1
      game_count = game_count + t
      print("Running total is now #.\n".format(game_count))
      I game_count >= 21
         print(‘So, congratulations, you've won!’)
         R 1
      roundno++

V c = 0
V m = 0
L
   V o = start()
   I o == -1
      L.break
   E
      c += I o == 0 {1} E 0
      m += I o == 1 {1} E 0
   print(‘Computer wins #. game, human wins #. games’.format(c, m))
   V t = input(‘Another game?(press y to continue):’)
   I t != ‘y’
      L.break
===
template <typename T1> auto select_count(const T1 &game_count)
{
    u"selects a random number if the game_count is less than 18. otherwise chooses the winning number"_S;
    int t;
    if (game_count < 18)
        t = randomns::_(range_ee(1, 3));
    else
        t = 21 - game_count;
    print(u"The computer chooses #."_S.format(t));
    return t;
}

auto request_count()
{
    u"request user input between 1,2 and 3. It will continue till either quit(q) or one of those numbers is requested."_S;
    auto t = u""_S;
    while (true) {
        try
        {
            t = input(u"Your choice 1 to 3 :"_S);
            if (in(to_int(t), create_array({1, 2, 3})))
                return to_int(t);
            else
                print(u"Out of range, try again"_S);
        }
        catch (...)
        {
            if (t == u'q')
                return 0;
            else
                print(u"Invalid Entry, try again"_S);
        }
    }
}

auto start()
{
    auto game_count = 0;
    print(u"Enter q to quit at any time.\nThe computer will choose first.\nRunning total is now #."_S.format(game_count));
    auto roundno = 1;
    while (true) {
        print(u"\nROUND #.: \n"_S.format(roundno));
        auto t = select_count(game_count);
        game_count = game_count + t;
        print(u"Running total is now #.\n"_S.format(game_count));
        if (game_count >= 21) {
            print(u"So, commiserations, the computer has won!"_S);
            return 0;
        }
        t = request_count();
        if (t == 0) {
            print(u"OK,quitting the game"_S);
            return -1;
        }
        game_count = game_count + t;
        print(u"Running total is now #.\n"_S.format(game_count));
        if (game_count >= 21) {
            print(u"So, congratulations, you've won!"_S);
            return 1;
        }
        roundno++;
    }
}

auto c = 0;
auto m = 0;

struct CodeBlock1
{
    CodeBlock1()
    {
        while (true) {
            auto o = start();
            if (o == -1)
                break;
            else {
                c += o == 0 ? 1 : 0;
                m += o == 1 ? 1 : 0;
            }
            print(u"Computer wins #. game, human wins #. games"_S.format(c, m));
            auto t = input(u"Another game?(press y to continue):"_S);
            if (t != u'y')
                break;
        }
    }
} code_block_1;